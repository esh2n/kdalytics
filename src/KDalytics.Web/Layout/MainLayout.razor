@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="app-container @(_sidebarOpen ? "sidebar-open" : "")">
    <div class="sidebar">
        <div class="sidebar-header">
            <div class="sidebar-logo">
                <span>üéÆ KDalytics</span>
            </div>
            <button class="sidebar-toggle" @onclick="ToggleSidebar">
                <span>‚úñÔ∏è</span>
            </button>
        </div>
        <NavMenu />
    </div>

    <div class="main-content">
        <div class="top-bar">
            <button class="menu-button" @onclick="ToggleSidebar">
                <span>‚ò∞</span>
            </button>
            <div class="user-menu">
                @if (_isAuthenticated)
                {
                    <div class="user-info" @onclick="ToggleUserDropdown">
                        <div class="avatar">
                            <span>@_userInitials</span>
                        </div>
                        <span class="user-name">@_userName</span>
                        <span class="dropdown-icon">‚ñº</span>
                    </div>
                    @if (_userDropdownOpen)
                    {
                        <div class="user-dropdown">
                            <div class="dropdown-item" @onclick="Logout">
                                <span>üö™</span> „É≠„Ç∞„Ç¢„Ç¶„Éà
                            </div>
                        </div>
                    }
                }
                else
                {
                    <button class="discord-login-button" @onclick="Login">
                        <span>üîó</span> Discord„Åß„É≠„Ç∞„Ç§„É≥
                    </button>
                }
            </div>
        </div>

        <div class="content">
            @Body
        </div>
    </div>
</div>

@code {
    private bool _sidebarOpen = false;
    private bool _isAuthenticated = false;
    private bool _userDropdownOpen = false;
    private string _userName = "„É¶„Éº„Ç∂„Éº";
    private string _userInitials = "U";

    protected override async Task OnInitializedAsync()
    {
        // „É≠„Ç∞„Ç§„É≥Áä∂ÊÖã„ÇíÁ¢∫Ë™ç
        var token = await GetStoredTokenAsync();
        _isAuthenticated = !string.IsNullOrEmpty(token);

        if (_isAuthenticated)
        {
            // „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„ÇíÂèñÂæóÔºàÂÆüÈöõ„ÅÆÂÆüË£Ö„Åß„ÅØAPI„Åã„ÇâÂèñÂæóÔºâ
            _userName = "Discord User";
            _userInitials = "D";
        }
    }

    private void ToggleSidebar()
    {
        _sidebarOpen = !_sidebarOpen;
    }

    private void ToggleUserDropdown()
    {
        _userDropdownOpen = !_userDropdownOpen;
    }

    private void Login()
    {
        // Discord„É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Å∏„É™„ÉÄ„Ç§„É¨„ÇØ„Éà
        NavigationManager.NavigateTo("/login");
    }

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "kdalytics_auth_token");
        _isAuthenticated = false;
        _userDropdownOpen = false;
        NavigationManager.NavigateTo("/");
    }

    private async Task<string> GetStoredTokenAsync()
    {
        try
        {
            return await JSRuntime.InvokeAsync<string>("localStorage.getItem", "kdalytics_auth_token") ?? "";
        }
        catch
        {
            return "";
        }
    }
}

<style>
    .app-container {
        display: flex;
        min-height: 100vh;
    }

    .sidebar {
        width: 250px;
        background-color: var(--dark);
        color: white;
        height: 100vh;
        position: fixed;
        left: 0;
        top: 0;
        z-index: 1000;
        transition: transform 0.3s ease;
    }

    .sidebar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .sidebar-logo {
        font-weight: 600;
        font-size: 1.25rem;
    }

    .sidebar-toggle {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        font-size: 1rem;
        display: none;
    }

    .main-content {
        flex: 1;
        margin-left: 250px;
        transition: margin-left 0.3s ease;
    }

    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 2rem;
        background-color: white;
        box-shadow: var(--shadow-sm);
    }

    .menu-button {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        display: none;
    }

    .user-menu {
        position: relative;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        padding: 0.5rem;
        border-radius: var(--radius);
        transition: var(--transition);
    }

    .user-info:hover {
        background-color: var(--gray-100);
    }

    .avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-color: var(--primary);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
    }

    .user-name {
        font-weight: 500;
    }

    .dropdown-icon {
        font-size: 0.75rem;
        color: var(--gray-600);
    }

    .user-dropdown {
        position: absolute;
        top: 100%;
        right: 0;
        background-color: white;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        min-width: 200px;
        z-index: 100;
        margin-top: 0.5rem;
    }

    .dropdown-item {
        padding: 0.75rem 1rem;
        cursor: pointer;
        transition: var(--transition);
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .dropdown-item:hover {
        background-color: var(--gray-100);
    }

    .discord-login-button {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background-color: var(--primary);
        color: white;
        border: none;
        border-radius: var(--radius);
        padding: 0.5rem 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: var(--transition);
    }

    .discord-login-button:hover {
        background-color: var(--primary-dark);
    }

    .content {
        padding: 2rem;
    }

    @@media(max - width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar-toggle {
                display: block;
            }

            .main-content {
                margin-left: 0;
            }

            .menu-button {
                display: block;
            }

            ::deep .app-container.sidebar-open .sidebar {
                transform: translateX(0);
            }
        }
    </style>